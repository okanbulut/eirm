[{"path":"/articles/eirm_vignette.html","id":"example-1-rasch-model","dir":"Articles","previous_headings":"","what":"Example 1: Rasch model","title":"Using eirm for estimating explanatory IRT models","text":"Rasch model (.e., fully descriptive model) can estimated using eirm. following example shows estimate Rasch item parameters verbal aggression data set (see ?VerbAgg details). preview VerbAgg data set shown : estimate Rasch model, regression-like formula must defined: formula = \"r2 ~ -1 + item + (1|id)\". formula, r2 variable dichotomous item responses -1 removes intercept model yields parameter estimates items data set. 1 (instead -1), intercept representing parameter first item relative parameters remaining items (.e., distance parameter first item) estimated. itemis variable representing item IDs data set (1|id) refers random effects persons represented id column data set. output Rasch model shown : default, eirm function returns easiness parameters function uses regression model parameterization positive parameters indicate positive association dependent variable. order print difficulty parameters (instead easiness), print(mod1, difficulty = TRUE) must used: mod1 object essentially glmerMod-class object lme4 package (Bates, Maechler, Bolker, & Walker (2015)). glmerMod results estimated model can seen mod1$model. example, estimated random effects persons (.e., theta estimates) can obtained using:","code":"data(\"VerbAgg\") head(VerbAgg) ##   Anger Gender        item    resp id btype  situ mode r2 ## 1    20      M S1WantCurse      no  1 curse other want  N ## 2    11      M S1WantCurse      no  2 curse other want  N ## 3    17      F S1WantCurse perhaps  3 curse other want  Y ## 4    21      F S1WantCurse perhaps  4 curse other want  Y ## 5    17      F S1WantCurse perhaps  5 curse other want  Y ## 6    21      F S1WantCurse     yes  6 curse other want  Y mod1 <- eirm(formula = \"r2 ~ -1 + item + (1|id)\", data = VerbAgg) print(mod1) print(mod1, difficulty = TRUE) theta <- ranef(mod1$model)$id head(theta)"},{"path":"/articles/eirm_vignette.html","id":"example-2-eirm-for-dichotomous-responses","dir":"Articles","previous_headings":"","what":"Example 2: EIRM for dichotomous responses","title":"Using eirm for estimating explanatory IRT models","text":"following example shows use item-related person-related explanatory variables explain dichotomous responses verbal aggression data set. possible visualize parameters using item-person map using plot(mod2a), returns following plot. Note plot modified version plotPImap function eRm package). Aesthetic elements axis labels plot title can added plot. example, following code updates x-axis label main plot title (see ?plot.eirm details). plot wpuld show difficulty parameters (instead easiness), change main title plot, change x-axis – name latent trait measured. Also, possible compare nested explanatory models . following example shows estimation compact version mod2a one less variable compares two models (.e., mod2a vs. mod2b).","code":"mod2a <- eirm(formula = \"r2 ~ -1 + situ + btype + mode + (1|id)\", data = VerbAgg)  print(mod2a) ## EIRM formula: \"r2 ~ -1 + situ + btype + mode + (1|id)\"  ##  ## Number of persons: 316  ##  ## Number of observations: 7584  ##  ## Number of predictors: 5  ##  ## Parameter Estimates: ##  ##              Easiness       S.E.   z-value       p-value ## situother   1.7437027 0.10145090  17.18765  3.285796e-66 ## situself    0.7158127 0.09775376   7.32261  2.431943e-13 ## btypescold -1.0551642 0.06803581 -15.50895  3.017583e-54 ## btypeshout -2.0421978 0.07292877 -28.00263 1.509082e-172 ## modedo     -0.6715770 0.05621055 -11.94753  6.688613e-33 ##  ## Note: The estimated parameters above represent 'easiness'. ## Use difficulty = TRUE to get difficulty parameters. plot(mod2a) plot(mod2a, difficulty = TRUE, main = \"Verbal Aggression Example\", latdim = \"Verbal Aggression\") mod2b <- eirm(formula = \"r2 ~ -1 + situ + btype + (1|id)\", data = VerbAgg)  anova(mod2a$model, mod2b$model)"},{"path":"/articles/eirm_vignette.html","id":"example-3-eirm-for-polytomous-responses","dir":"Articles","previous_headings":"","what":"Example 3: EIRM for polytomous responses","title":"Using eirm for estimating explanatory IRT models","text":"also possible use eirm function polytomous item responses well. function accepts dichotomous responses (.e., binomial distribution), polytomous data must reformatted first. reformat data, polyreformat function can used. following example demonstrates polytomous responses (, perhaps, yes) verbal aggression data set can reformatted dichotomous form: reformatted data, polyresponse new dependent variable (.e., pseudo-dichotomous version original response variable resp) polycategory represents response categories. Based reformatted data, item two rows (number response categories - 1) based following rules (Stanke & Bulut (2019)) details parameterization): polycategory = “cat_perhaps” resp = “”, polyresponse = 0 polycategory = “cat_perhaps” resp = “perhaps”, polyresponse = 1 polycategory = “cat_perhaps” resp = “yes”, polyresponse = NA polycategory = “cat_yes” resp = “”, polyresponse = NA polycategory = “cat_yes” resp = “perhaps”, polyresponse = 0 polycategory = “cat_yes” resp = “yes”, polyresponse = 1 NOTE: Although polyreformat capable reshaping wide-format data long-format reformat long data analysis eirm, safer option transform data wide long format using polyreformat. melt function reshape2 package can easily transform wide data long data. Several polytomous models can estimated using reformatted data: Model 1: explains first threshold (.e., threshold perhaps) based explanatory variables: Model 2: explains first threshold (.e., threshold perhaps) second threshold (perhaps yes) based explanatory variables:","code":"VerbAgg2 <- polyreformat(data=VerbAgg, id.var = \"id\", long.format = FALSE,                           var.name = \"item\", val.name = \"resp\")  head(VerbAgg2) ##   Anger Gender        item    resp id btype  situ mode r2 polycategory ## 1    20      M S1WantCurse      no  1 curse other want  N  cat_perhaps ## 2    11      M S1WantCurse      no  2 curse other want  N  cat_perhaps ## 3    17      F S1WantCurse perhaps  3 curse other want  Y  cat_perhaps ## 4    21      F S1WantCurse perhaps  4 curse other want  Y  cat_perhaps ## 5    17      F S1WantCurse perhaps  5 curse other want  Y  cat_perhaps ## 6    21      F S1WantCurse     yes  6 curse other want  Y  cat_perhaps ##   polyresponse                polyitem ## 1            0 S1WantCurse.cat_perhaps ## 2            0 S1WantCurse.cat_perhaps ## 3            1 S1WantCurse.cat_perhaps ## 4            1 S1WantCurse.cat_perhaps ## 5            1 S1WantCurse.cat_perhaps ## 6           NA S1WantCurse.cat_perhaps mod3 <- eirm(formula = \"polyresponse ~ -1 + situ + btype + mode + (1|id)\",               data = VerbAgg2) mod4 <- eirm(formula = \"polyresponse ~ -1 + btype + situ + mode +               polycategory + polycategory:btype + (1|id)\", data = VerbAgg2)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Okan Bulut. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulut, O. (2021). eirm: Explanatory item response modeling dichotomous polytomous item responses R package version 0.3.0. URL: https://CRAN.R-project.org/package=eirm. Bulut, O., Gorgun, G., & Yildirim-Erbasli, S. N. (2021). Estimating explanatory extensions dichotomous polytomous Rasch models: eirm package R. Psych, 3(3), 308-321. doi: 10.3390/psych3030023 Stanke, L., & Bulut, O. (2019). Explanatory item response models polytomous item responses. International Journal Assessment Tools Education, 6(2), 259–278. doi: 10.21449/ijate.515085","code":"@Manual{,   title = {{eirm}: Explanatory item response modeling for dichotomous and polytomous item responses},   author = {Okan Bulut},   year = {2021},   doi = {10.5281/zenodo.4556285},   note = {R package version 0.3.0},   url = {https://CRAN.R-project.org/package=eirm}, } @Article{,   author = {Okan Bulut and Guher Gorgun and Seyma Nur Yildirim-Erbasli},   title = {Estimating explanatory extensions of dichotomous and polytomous Rasch models: The eirm package in R},   journal = {Psych},   year = {2021},   volume = {3},   number = {3},   pages = {308-321},   doi = {10.3390/psych3030023}, } @Article{,   author = {Luke Stanke and Okan Bulut},   title = {Explanatory item response models for polytomous item responses},   journal = {International Journal of Assessment Tools in Education},   year = {2019},   volume = {6},   number = {2},   pages = {259-278},   doi = {10.21449/ijate.515085}, }"},{"path":"/index.html","id":"eirm-explanatory-item-response-modeling-","dir":"","previous_headings":"","what":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"eirm package, essentially wrapper around lme4 blme packages, provides simple easy--use set tools preparing data, estimating explanatory item response theory (IRT) models, extracting model output, visualizing model results. primary goal eirm streamline processes data preparation, model estimation, model interpretation various explanatory IRT models. functions eirm package enable researchers leverage power lme4 blme estimation explanatory IRT models providing additional helper functions visualization tools better interpret model output.","code":""},{"path":"/index.html","id":"installing-eirm","dir":"","previous_headings":"","what":"Installing eirm","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"latest version CRAN can installed : development version can installed : Note: download Github version see following output console (something similar), please choose 3: None list. can simply type 3 R console hit “enter”. also fails, can run following lines together select 3: None typing 3 R console:","code":"install.packages(\"eirm\") devtools::install_github(repo = \"okanbulut/eirm\") Downloading GitHub repo okanbulut/eirm@master These packages have more recent versions available. Which would you like to update?  1: All                                       2: CRAN packages only                        3: None                                      4: Rcpp      (1.0.1     -> 1.0.3    ) [CRAN] 5: RcppEigen (0.3.3.5.0 -> 0.3.3.7.0) [CRAN] 6: plyr      (1.8.4     -> 1.8.5    ) [CRAN] 7: stringi   (1.4.3     -> 1.4.5    ) [CRAN]  Enter one or more numbers, or an empty line to skip updates: Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE) devtools::install_github(repo = \"okanbulut/eirm\")"},{"path":"/index.html","id":"citing-eirm","dir":"","previous_headings":"","what":"Citing eirm","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"cite eirm work, please use following APA-style citation: Bulut, O. (2021). eirm: Explanatory item response modeling dichotomous polytomous item responses, R package version 0.4. doi: 10.5281/zenodo.4556285 Available https://CRAN.R-project.org/package=eirm. Bulut, O., Gorgun, G., & Yildirim-Erbasli, S. N. (2021). Estimating explanatory extensions dichotomous polytomous Rasch models: eirm package R. Psych, 3(3), 308-321. doi:10.3390/psych3030023 can also print(citation(\"eirm\"), bibtex = TRUE) view citations BibTeX format.","code":""},{"path":"/index.html","id":"shiny-gui-for-eirm","dir":"","previous_headings":"","what":"Shiny GUI for eirm","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"can use eirmShiny() open Shiny GUI eirm function:","code":""},{"path":"/index.html","id":"example-1-rasch-model","dir":"","previous_headings":"","what":"Example 1: Rasch model","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"Rasch model (.e., fully-descriptive model) can estimated using eirm. following example shows estimate Rasch item parameters verbal aggression data set (see ?VerbAgg details). preview VerbAgg data set shown : estimate Rasch model, regression-like formula must defined: formula = \"r2 ~ -1 + item + (1|id)\". formula, r2 variable dichotomous item responses. -1 removes intercept model yields parameter estimates items data set. 1 (instead -1), intercept representing parameter first item relative parameters remaining items (.e., distances parameter first item) estimated. itemis variable representing item IDs data set. (1|id) refers random effects persons represented id column data set. output Rasch model shown : default, eirm function returns easiness parameters function uses regression model parameterization positive parameters indicate positive association dependent variable. order print difficulty parameters (instead easiness), print(mod1, difficulty = TRUE) must used: mod1 object essentially glmerMod-class object lme4 package (Bates, Maechler, Bolker, & Walker, 2015). glmerMod results estimated model can seen mod1$model. example, estimated random effects persons (.e., theta estimates) can obtained using:","code":"data(\"VerbAgg\") head(VerbAgg)    Anger Gender        item    resp id btype  situ mode r2 1    20      M S1WantCurse      no  1 curse other want  N 2    11      M S1WantCurse      no  2 curse other want  N 3    17      F S1WantCurse perhaps  3 curse other want  Y 4    21      F S1WantCurse perhaps  4 curse other want  Y 5    17      F S1WantCurse perhaps  5 curse other want  Y 6    21      F S1WantCurse     yes  6 curse other want  Y mod1 <- eirm(formula = \"r2 ~ -1 + item + (1|id)\", data = VerbAgg) print(mod1)  EIRM formula: \"r2 ~ -1 + item + (1|id)\"   Number of persons: 316   Number of observations: 7584   Number of predictors: 24   Parameter Estimates:                  Easiness  S.E.  z-value  p-value itemS1WantCurse   1.2211 0.161   7.5794 3.47e-14 itemS1WantScold   0.5648 0.153   3.7032 2.13e-04 itemS1WantShout   0.0801 0.150   0.5323 5.95e-01 itemS2WantCurse   1.7488 0.174  10.0632 8.03e-24 itemS2WantScold   0.7077 0.154   4.6020 4.18e-06 itemS2WantShout   0.0117 0.150   0.0779 9.38e-01 itemS3WantCurse   0.5295 0.152   3.4777 5.06e-04 itemS3WantScold  -0.6864 0.154  -4.4506 8.56e-06 itemS3WantShout  -1.5269 0.169  -9.0222 1.84e-19 itemS4wantCurse   1.0820 0.159   6.8193 9.15e-12 itemS4WantScold  -0.3494 0.151  -2.3062 2.11e-02 itemS4WantShout  -1.0440 0.159  -6.5628 5.28e-11 itemS1DoCurse     1.2211 0.161   7.5794 3.47e-14 itemS1DoScold     0.3896 0.151   2.5739 1.01e-02 itemS1DoShout    -0.8712 0.156  -5.5680 2.58e-08 itemS2DoCurse     0.8726 0.156   5.6063 2.07e-08 itemS2DoScold    -0.0567 0.151  -0.3766 7.06e-01 itemS2DoShout    -1.4819 0.168  -8.8152 1.19e-18 itemS3DoCurse    -0.2110 0.151  -1.3988 1.62e-01 itemS3DoScold    -1.5043 0.169  -8.9189 4.71e-19 itemS3DoShout    -2.9750 0.233 -12.7483 3.19e-37 itemS4DoCurse     0.7077 0.154   4.6020 4.18e-06 itemS4DoScold    -0.3842 0.152  -2.5328 1.13e-02 itemS4DoShout    -1.9995 0.184 -10.8750 1.52e-27  Note: The estimated parameters above represent 'easiness'. Use difficulty = TRUE to get difficulty parameters. EIRM formula: \"r2 ~ -1 + item + (1|id)\"   Number of persons: 316   Number of observations: 7584   Number of predictors: 24   Parameter Estimates:                  Difficulty  S.E.  z-value  p-value itemS1WantCurse    -1.2211 0.161   7.5794 3.47e-14 itemS1WantScold    -0.5648 0.153   3.7032 2.13e-04 itemS1WantShout    -0.0801 0.150   0.5323 5.95e-01 itemS2WantCurse    -1.7488 0.174  10.0632 8.03e-24 itemS2WantScold    -0.7077 0.154   4.6020 4.18e-06 itemS2WantShout    -0.0117 0.150   0.0779 9.38e-01 itemS3WantCurse    -0.5295 0.152   3.4777 5.06e-04 itemS3WantScold     0.6864 0.154  -4.4506 8.56e-06 itemS3WantShout     1.5269 0.169  -9.0222 1.84e-19 itemS4wantCurse    -1.0820 0.159   6.8193 9.15e-12 itemS4WantScold     0.3494 0.151  -2.3062 2.11e-02 itemS4WantShout     1.0440 0.159  -6.5628 5.28e-11 itemS1DoCurse      -1.2211 0.161   7.5794 3.47e-14 itemS1DoScold      -0.3896 0.151   2.5739 1.01e-02 itemS1DoShout       0.8712 0.156  -5.5680 2.58e-08 itemS2DoCurse      -0.8726 0.156   5.6063 2.07e-08 itemS2DoScold       0.0567 0.151  -0.3766 7.06e-01 itemS2DoShout       1.4819 0.168  -8.8152 1.19e-18 itemS3DoCurse       0.2110 0.151  -1.3988 1.62e-01 itemS3DoScold       1.5043 0.169  -8.9189 4.71e-19 itemS3DoShout       2.9750 0.233 -12.7483 3.19e-37 itemS4DoCurse      -0.7077 0.154   4.6020 4.18e-06 itemS4DoScold       0.3842 0.152  -2.5328 1.13e-02 itemS4DoShout       1.9995 0.184 -10.8750 1.52e-27  Note: The estimated parameters above represent 'difficulty'. ranef(mod1$model)$id"},{"path":"/index.html","id":"example-2-eirm-for-dichotomous-responses","dir":"","previous_headings":"","what":"Example 2: EIRM for dichotomous responses","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"following example shows use item-related person-related explanatory variables explain dichotomous responses verbal aggression data set. possible visualize parameters using item-person map using plot(mod2a), returns following plot. Note plot modified version plotPImap function eRm package (Mair, Hatzinger, Maier, Rusch, & Debelak, 2020).  Aesthetic elements axis labels plot title can added plot. example, following code updates x-axis label main plot title (see ?plot.eirm details). show difficulty parameters (instead easiness), change main title plot, change x-axis – name latent trait measured. addition item-person map, can also visualize marginal effects model using marginalplot function. plot uses ggeffects package calculate marginal effects ggplot2 package create plot. following code return marginal effect plot three explanatory variables mod2a.  Also, possible compare nested explanatory models . following example shows estimation compact version mod2a one less variable compares two models (.e., mod2a vs. mod2b).","code":"mod2a <- eirm(formula = \"r2 ~ -1 + situ + btype + mode + (1|id)\", data = VerbAgg) print(mod2a)  EIRM formula: \"r2 ~ -1 + situ + btype + mode + (1|id)\"   Number of persons: 316   Number of observations: 7584   Number of predictors: 5   Parameter Estimates:             Easiness   S.E. z-value   p-value situother     1.744 0.1015   17.19  3.29e-66 situself      0.716 0.0978    7.32  2.43e-13 btypescold   -1.055 0.0680  -15.51  3.02e-54 btypeshout   -2.042 0.0729  -28.00 1.51e-172 modedo       -0.672 0.0562  -11.95  6.69e-33  Note: The estimated parameters above represent 'easiness'. Use difficulty = TRUE to get difficulty parameters. plot(mod2a, difficulty = TRUE, main = \"Verbal Aggression Example\", latdim = \"Verbal Aggression\") marginalplot(mod2a, predictors = c(\"situ\", \"btype\", \"mode\")) mod2b <- eirm(formula = \"r2 ~ -1 + situ + btype + (1|id)\", data = VerbAgg) anova(mod2a$model, mod2b$model)  Data: data Models: mod2b$model: r2 ~ -1 + situ + btype + (1 | id) mod2a$model: r2 ~ -1 + situ + btype + mode + (1 | id)              Df  AIC  BIC logLik deviance Chisq Chi Df Pr(>Chisq)     mod2b$model  5 8390 8424  -4190     8380                             mod2a$model  6 8250 8292  -4119     8238   142      1     <2e-16 *** --- Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"/index.html","id":"example-3-eirm-for-polytomous-responses","dir":"","previous_headings":"","what":"Example 3: EIRM for polytomous responses","title":"Explanatory Item Response Modeling for Dichotomous and Polytomous Items","text":"also possible use eirm function polytomous item responses well. function accepts dichotomous responses (.e., binomial distribution), polytomous data must reformatted first. reformat data, polyreformat function can used. following example demonstrates polytomous responses (, perhaps, yes) verbal aggression data set can reformatted dichotomous form: reformatted data, polyresponse new dependent variable (.e., pseudo-dichotomous version original response variable resp) polycategory represents response categories. Based reformatted data, item two rows (number response categories - 1) based following rules (see Stanke Bulut (2019) details parameterization): polycategory = “cat_perhaps” resp = “”, polyresponse = 0 polycategory = “cat_perhaps” resp = “perhaps”, polyresponse = 1 polycategory = “cat_perhaps” resp = “yes”, polyresponse = NA polycategory = “cat_yes” resp = “”, polyresponse = NA polycategory = “cat_yes” resp = “perhaps”, polyresponse = 0 polycategory = “cat_yes” resp = “yes”, polyresponse = 1 NOTE: Although polyreformat capable reshaping wide-format data long-format reformat long data analysis eirm, safer option transform data wide long format using polyreformat. melt function reshape2 package can easily transform wide data long data. Several polytomous models can estimated using reformatted data: Model 1: explains first threshold (.e., threshold perhaps) based explanatory variables: Model 2: explains first threshold (.e., threshold perhaps) second threshold (perhaps yes) based explanatory variables:","code":"VerbAgg2 <- polyreformat(data=VerbAgg, id.var = \"id\", long.format = FALSE, var.name = \"item\", val.name = \"resp\") head(VerbAgg2)    Anger Gender        item    resp id btype  situ mode r2 polycategory polyresponse                polyitem 1    20      M S1WantCurse      no  1 curse other want  N  cat_perhaps            0 S1WantCurse.cat_perhaps 2    11      M S1WantCurse      no  2 curse other want  N  cat_perhaps            0 S1WantCurse.cat_perhaps 3    17      F S1WantCurse perhaps  3 curse other want  Y  cat_perhaps            1 S1WantCurse.cat_perhaps 4    21      F S1WantCurse perhaps  4 curse other want  Y  cat_perhaps            1 S1WantCurse.cat_perhaps 5    17      F S1WantCurse perhaps  5 curse other want  Y  cat_perhaps            1 S1WantCurse.cat_perhaps 6    21      F S1WantCurse     yes  6 curse other want  Y  cat_perhaps           NA S1WantCurse.cat_perhaps mod3 <- eirm(formula = \"polyresponse ~ -1 + situ + btype + mode + (1|id)\", data = VerbAgg2) mod4 <- eirm(formula = \"polyresponse ~ -1 + btype + situ + mode + polycategory + polycategory:btype + (1|id)\",               data = VerbAgg2)"},{"path":"/reference/eirm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile Analysis of Multivariate Data in R — eirm-package","title":"Profile Analysis of Multivariate Data in R — eirm-package","text":"package eirm provides set tools analyze visualize   dichotomous polytomous item responses using explanatory item   response modeling (EIRM). generalized linear mixed modeling (GLMM)   framework used examining impact item-related person-related   variables responses. items repeated measures  nested underpersons.   model details can found de Boeck Wilson's (2004) Explanatory Item Response Models -   Generalized Linear Nonlinear Approach <DOI: 10.1007/978-1-4757-3990-9>.","code":""},{"path":"/reference/eirm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile Analysis of Multivariate Data in R — eirm-package","text":"Okan Bulut bulut@ualberta.ca","code":""},{"path":"/reference/eirm-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Profile Analysis of Multivariate Data in R — eirm-package","text":"De Boeck, P., & Wilson, M. (2004). Explanatory item response models: generalized linear   nonlinear approach. New York: Springer-Verlag.","code":""},{"path":"/reference/eirm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating explanatory item response modeling using the GLMM framework — eirm","title":"Estimating explanatory item response modeling using the GLMM framework — eirm","text":"eirm function estimates explanatory item response models item-related person-related covariates. function requires data long format items nested within persons. item responses polytomous, data reformatted using polyreformat function.","code":""},{"path":"/reference/eirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating explanatory item response modeling using the GLMM framework — eirm","text":"","code":"eirm(   formula,   data,   engine = \"lme4\",   na.action = \"na.omit\",   weights = NULL,   mustart = NULL,   etastart = NULL,   cov.prior = \"wishart\",   fixef.prior = NULL,   control = glmerControl(optimizer = \"optimx\", calc.derivs = FALSE, optCtrl =     list(method = \"nlminb\", starttests = FALSE, kkt = FALSE)) )"},{"path":"/reference/eirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating explanatory item response modeling using the GLMM framework — eirm","text":"formula regression-like formula defines item responses dependent variable explanatory predictors independent predictors. example, \"response ~ -1 + predictor1 + predictor2\". Use -1 formula avoid estimation intercept parameter. data data frame long format multiple rows person (.e., nested data). data involve variable represents item responses, variable represents persons, additional predictors used 'explaining' item responses. engine Estimation engine options either \"lme4\" (default) \"blme\". na.action missing data handled (default: \"na.omit\"). weights Weights used estimation. mustart, etastart Model specification arguments glmer. See glmer details. used engine = \"lme4\". cov.prior BLME prior list priors options \"wishart\" (default), \"invwishart\", \"gamma\", \"invgamma\", NULL impose prior covariance random effects. used engine = \"lme4\". fixef.prior BLME prior family \"normal\", \"t\", \"horseshoe\", NULL (default) impose prior fixed effects. used engine = \"lme4\". control Control settings glmer function lme4. Note optimx package used default speed estimation. higher accuracy results, default lme4 optimizers can used.","code":""},{"path":"/reference/eirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating explanatory item response modeling using the GLMM framework — eirm","text":"eirm-class list includes EIRM formula used estimation, estimated parameters model, ability estimates persons random effects (), complete set results returned glmer function. results can used analysis graphics based lme4.","code":""},{"path":"/reference/eirm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating explanatory item response modeling using the GLMM framework — eirm","text":"","code":"# \\donttest{ data(\"VerbAgg\") mod0 <- eirm(formula = \"r2 ~ -1 + situ + btype + (1|id)\", data = VerbAgg) print(mod0) # To get easiness parameters #> EIRM formula: \"r2 ~ -1 + situ + btype + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 4  #>  #> Parameter Estimates: #>  #>              Easiness       S.E.    z-value       p-value #> situother   1.3757776 0.09409460  14.621217  2.056918e-48 #> situself    0.3711422 0.09134751   4.062971  4.845215e-05 #> btypescold -1.0310191 0.06714884 -15.354234  3.318058e-53 #> btypeshout -1.9956435 0.07178245 -27.801272 4.186816e-170 #>  #> Note: The estimated parameters above represent 'easiness'. #> Use difficulty = TRUE to get difficulty parameters. print(mod0, difficulty = TRUE) # To get difficulty parameters #> EIRM formula: \"r2 ~ -1 + situ + btype + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 4  #>  #> Parameter Estimates: #>  #>            Difficulty       S.E.    z-value       p-value #> situother  -1.3757776 0.09409460  14.621217  2.056918e-48 #> situself   -0.3711422 0.09134751   4.062971  4.845215e-05 #> btypescold  1.0310191 0.06714884 -15.354234  3.318058e-53 #> btypeshout  1.9956435 0.07178245 -27.801272 4.186816e-170 #>  #> Note: The estimated parameters above represent 'difficulty'. plot(mod0)  mod1 <- eirm(formula = \"r2 ~ -1 + situ + btype + mode + (1|id)\", data = VerbAgg) print(mod1) # To get easiness parameters #> EIRM formula: \"r2 ~ -1 + situ + btype + mode + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 5  #>  #> Parameter Estimates: #>  #>              Easiness       S.E.   z-value       p-value #> situother   1.7437027 0.10145090  17.18765  3.285796e-66 #> situself    0.7158127 0.09775376   7.32261  2.431943e-13 #> btypescold -1.0551642 0.06803581 -15.50895  3.017583e-54 #> btypeshout -2.0421978 0.07292877 -28.00263 1.509082e-172 #> modedo     -0.6715770 0.05621055 -11.94753  6.688613e-33 #>  #> Note: The estimated parameters above represent 'easiness'. #> Use difficulty = TRUE to get difficulty parameters. print(mod1, difficulty = TRUE) # To get difficulty parameters #> EIRM formula: \"r2 ~ -1 + situ + btype + mode + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 5  #>  #> Parameter Estimates: #>  #>            Difficulty       S.E.   z-value       p-value #> situother  -1.7437027 0.10145090  17.18765  3.285796e-66 #> situself   -0.7158127 0.09775376   7.32261  2.431943e-13 #> btypescold  1.0551642 0.06803581 -15.50895  3.017583e-54 #> btypeshout  2.0421978 0.07292877 -28.00263 1.509082e-172 #> modedo      0.6715770 0.05621055 -11.94753  6.688613e-33 #>  #> Note: The estimated parameters above represent 'difficulty'. plot(mod1)  # }"},{"path":"/reference/eirmShiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical user interface (GUI) of the eirm function — eirmShiny","title":"Graphical user interface (GUI) of the eirm function — eirmShiny","text":"interactive Shiny application running eirm function. application allows users import (long-format) response data, define response variable predictors, run estimation, produce output, well item-person plot, screen.","code":""},{"path":"/reference/eirmShiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical user interface (GUI) of the eirm function — eirmShiny","text":"","code":"eirmShiny()"},{"path":"/reference/eirmShiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical user interface (GUI) of the eirm function — eirmShiny","text":"","code":"if (FALSE) { eirmShiny() }"},{"path":"/reference/marginalplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","title":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","text":"function uses ggpredict calculate marginal effects explanatory variables explanatory IRT model estimated eirm function. returns plot estimated probabilities generated explanatory IRT model holding predictors constant.","code":""},{"path":"/reference/marginalplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","text":"","code":"marginalplot(x, predictors, conf.int = 0.95, plot.title = NULL)"},{"path":"/reference/marginalplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","text":"x eirm object returned eirm function. predictors Character vector names three categorical predictors eirm model. first predictor plotted x-axis; second predictor used group variable; third predictor used facet plot. conf.int Confidence interval used plot (default = 0.95 95% confidence intervals). plot.title title used plot.","code":""},{"path":"/reference/marginalplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","text":"ggplot2 object.","code":""},{"path":"/reference/marginalplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots of Estimated Marginal Effects in Explanatory IRT Models — marginalplot","text":"","code":"data(\"VerbAgg\") mod <- eirm(formula = \"r2 ~ -1 + situ + btype + mode + (1|id)\", data = VerbAgg)  # Only one predictor p1 <- marginalplot(mod, predictors = c(\"situ\"))  # Two predictors p2 <- marginalplot(mod, predictors = c(\"situ\", \"btype\"))  # All three predictors p3 <- marginalplot(mod, predictors = c(\"situ\", \"btype\", \"mode\"))"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/plot.eirm.html","id":null,"dir":"Reference","previous_headings":"","what":"Person-Item Map for Explanatory IRT Models — plot.eirm","title":"Person-Item Map for Explanatory IRT Models — plot.eirm","text":"function creates person-item map object returned eirm function. function modified plotPImap package eRm.","code":""},{"path":"/reference/plot.eirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Person-Item Map for Explanatory IRT Models — plot.eirm","text":"","code":"# S3 method for eirm plot(   x,   difficulty = FALSE,   sorted = TRUE,   theta = NULL,   main = \"Person-Item Map\",   latdim = \"Latent Dimension\",   pplabel = \"Person\\nParameter\\nDistribution\",   cex.gen = 0.7,   ... )"},{"path":"/reference/plot.eirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Person-Item Map for Explanatory IRT Models — plot.eirm","text":"x object returned eirm function. difficulty Whether difficulty used instead easiness (default: FALSE). sorted Whether parameters sorted plot (default: TRUE). theta vector estimated theta values. NULL, theta values obtained estimated eirm model. might better save theta values baseline model (e.g., Rasch) use creating person-item map. main Main title person-item map. latdim Label x-axis, .e., latent dimension. pplabel Title upper panel displaying person parameter distribution. cex.gen numerical value giving amount plotting text symbols magnified relative default. cex.gen applies text labels. default 0.7. ... plot-related arguments.","code":""},{"path":"/reference/plot.eirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Person-Item Map for Explanatory IRT Models — plot.eirm","text":"person-item map.","code":""},{"path":"/reference/plot.eirm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Person-Item Map for Explanatory IRT Models — plot.eirm","text":"","code":"data(\"VerbAgg\") mod0 <- eirm(formula = \"r2 ~ -1 + situ + btype + (1|id)\", data = VerbAgg) plot(mod0)  plot(mod0, difficulty = TRUE) # Plot difficulty instead of easiness"},{"path":"/reference/polyreformat.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","title":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","text":"function prepares data polytomous item responses explanatory item response modeling. data already long format (.e., items person), recodes polytomous responses creates new variable used estimation. data long format, reshaping data long format recoding items can done simultaneously.","code":""},{"path":"/reference/polyreformat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","text":"","code":"polyreformat(   data,   id.var,   long.format = FALSE,   var.name = \"item\",   val.name = \"resp\" )"},{"path":"/reference/polyreformat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","text":"data data frame -- either wide format rows represent persons columns represent items explanatory variables long format multiple rows person (.e., nested data) id.var variable represents examinee IDs. long.format Whether data follow wide format thus need transformed long format first (default FALSE) var.name variable represents item IDs data already long format; otherwise variable represents item IDs data transformed long format. val.name variable represents item responses data already long format; otherwise variable represents item responses data transformed long format.","code":""},{"path":"/reference/polyreformat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","text":"Reformatted data explanatory item response modeling.","code":""},{"path":"/reference/polyreformat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat polytomous item responses in a long format for explanatory item response modeling — polyreformat","text":"","code":"data(\"VerbAgg\") VerbAgg2 <- polyreformat(data=VerbAgg, id.var = \"id\", long.format = FALSE, var.name = \"item\", val.name = \"resp\") head(VerbAgg2) #>   Anger Gender        item    resp id btype  situ mode r2 polycategory #> 1    20      M S1WantCurse      no  1 curse other want  N  cat_perhaps #> 2    11      M S1WantCurse      no  2 curse other want  N  cat_perhaps #> 3    17      F S1WantCurse perhaps  3 curse other want  Y  cat_perhaps #> 4    21      F S1WantCurse perhaps  4 curse other want  Y  cat_perhaps #> 5    17      F S1WantCurse perhaps  5 curse other want  Y  cat_perhaps #> 6    21      F S1WantCurse     yes  6 curse other want  Y  cat_perhaps #>   polyresponse                polyitem #> 1            0 S1WantCurse.cat_perhaps #> 2            0 S1WantCurse.cat_perhaps #> 3            1 S1WantCurse.cat_perhaps #> 4            1 S1WantCurse.cat_perhaps #> 5            1 S1WantCurse.cat_perhaps #> 6           NA S1WantCurse.cat_perhaps"},{"path":"/reference/print.eirm.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","title":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","text":"generic function prints estimated parameters eirm object returned eirm function.","code":""},{"path":"/reference/print.eirm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","text":"","code":"# S3 method for eirm print(x, difficulty = FALSE, ...)"},{"path":"/reference/print.eirm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","text":"x object returned eirm function. difficulty Whether difficulty used instead easiness (default: FALSE) ... print-related arguments.","code":""},{"path":"/reference/print.eirm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","text":"Estimated parameters eirm object.","code":""},{"path":"/reference/print.eirm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Estimated Parameters for Explanatory IRT Models — print.eirm","text":"","code":"data(\"VerbAgg\") mod0 <- eirm(formula = \"r2 ~ -1 + situ + btype + (1|id)\", data = VerbAgg) print(mod0) # or, just mod0 #> EIRM formula: \"r2 ~ -1 + situ + btype + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 4  #>  #> Parameter Estimates: #>  #>              Easiness       S.E.    z-value       p-value #> situother   1.3757776 0.09409460  14.621217  2.056918e-48 #> situself    0.3711422 0.09134751   4.062971  4.845215e-05 #> btypescold -1.0310191 0.06714884 -15.354234  3.318058e-53 #> btypeshout -1.9956435 0.07178245 -27.801272 4.186816e-170 #>  #> Note: The estimated parameters above represent 'easiness'. #> Use difficulty = TRUE to get difficulty parameters. print(mod0, difficulty = TRUE) #> EIRM formula: \"r2 ~ -1 + situ + btype + (1|id)\"  #>  #> Number of persons: 316  #>  #> Number of observations: 7584  #>  #> Number of predictors: 4  #>  #> Parameter Estimates: #>  #>            Difficulty       S.E.    z-value       p-value #> situother  -1.3757776 0.09409460  14.621217  2.056918e-48 #> situself   -0.3711422 0.09134751   4.062971  4.845215e-05 #> btypescold  1.0310191 0.06714884 -15.354234  3.318058e-53 #> btypeshout  1.9956435 0.07178245 -27.801272 4.186816e-170 #>  #> Note: The estimated parameters above represent 'difficulty'."},{"path":"/reference/testdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Fabricated Short Quiz with Explanatory Variables — testdata","title":"Fabricated Short Quiz with Explanatory Variables — testdata","text":"dataset contains examinees' responses short quiz 10 items.data set fabricated demonstrate Explanatory Item Response Modeling.","code":""},{"path":"/reference/testdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fabricated Short Quiz with Explanatory Variables — testdata","text":"","code":"testdata"},{"path":"/reference/testdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fabricated Short Quiz with Explanatory Variables — testdata","text":"long format data frame containing 1000 examinees' responses 10 items additional variables. person Examinee ID item Item ID response Dichotomous item responses gender Examinees' gender F female M male itemtype variable define whether items quiz visual component","code":""},{"path":"/reference/VerbAggWide.html","id":null,"dir":"Reference","previous_headings":"","what":"Verbal Aggression Data in a Wide Format — VerbAggWide","title":"Verbal Aggression Data in a Wide Format — VerbAggWide","text":"Verbal Aggression data set wide-format version  VerbAgg data set lme4 package (Bates, Maechler, Bolker, & Walker, 2015) R.","code":""},{"path":"/reference/VerbAggWide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verbal Aggression Data in a Wide Format — VerbAggWide","text":"","code":"VerbAggWide"},{"path":"/reference/VerbAggWide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Verbal Aggression Data in a Wide Format — VerbAggWide","text":"data frame 316 participants 27 variables.","code":""},{"path":"/reference/VerbAggWide.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Verbal Aggression Data in a Wide Format — VerbAggWide","text":"Bates, D., Maechler, M., Bolker, B., & Walker, S. (2015). Fitting linear mixed-effects models using lme4. Journal Statistical Software, 67(1), 1-48. doi:10.18637/jss.v067.i01.","code":""},{"path":"/news/index.html","id":"eirm-05","dir":"Changelog","previous_headings":"","what":"eirm 0.5","title":"eirm 0.5","text":"CRAN release: 2021-10-25 bug polyreformat function fixed. new citation eirm included. blme package linked eirm Maximum posteriori estimation Bayesian setting. See engine option eirm function.","code":""},{"path":"/news/index.html","id":"eirm-04","dir":"Changelog","previous_headings":"","what":"eirm 0.4","title":"eirm 0.4","text":"CRAN release: 2021-07-04 marginal effect plot added.","code":""},{"path":"/news/index.html","id":"eirm-03","dir":"Changelog","previous_headings":"","what":"eirm 0.3","title":"eirm 0.3","text":"CRAN release: 2021-02-23 Shiny app added run eirm GUI. pipe operator (%>%) added package. Citation information updated.","code":""},{"path":"/news/index.html","id":"eirm-020","dir":"Changelog","previous_headings":"","what":"eirm 0.2.0","title":"eirm 0.2.0","text":"CRAN release: 2020-10-27 package now available CRAN. polyreformat function fixed. Typos function descriptions removed.","code":""}]
